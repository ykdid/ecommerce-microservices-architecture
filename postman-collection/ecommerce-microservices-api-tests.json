{
  "info": {
    "name": "E-Commerce Microservices API Tests",
    "description": "Comprehensive API test collection for the e-commerce microservices architecture including Auth, Product, Order, and Stock services",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication Service",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.environment.set('auth_token', jsonData.token);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fullName\": \"{{user_fullname}}\",\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/auth/register",
              "host": ["{{gateway_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.environment.set('auth_token', jsonData.token);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/auth/login",
              "host": ["{{gateway_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Health Check (Protected)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{gateway_url}}/auth/health",
              "host": ["{{gateway_url}}"],
              "path": ["auth", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Product Service",
      "item": [
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains product ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('Id');",
                  "    pm.environment.set('product_id', jsonData.Id);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{product_name}}\",\n    \"price\": {{product_price}},\n    \"stock\": {{product_stock}}\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/products",
              "host": ["{{gateway_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Products",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 2000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{gateway_url}}/products",
              "host": ["{{gateway_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains product details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData).to.have.property('price');",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 2000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{gateway_url}}/products/{{product_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{product_id}}\",\n    \"name\": \"{{product_name}} - Updated\",\n    \"price\": {{product_price_updated}},\n    \"stock\": {{product_stock_updated}}\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/products/{{product_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{gateway_url}}/products/{{product_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Order Service",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains order ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.not.be.empty;",
                  "    pm.environment.set('order_id', jsonData);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 5000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"{{user_id}}\",\n    \"shippingAddress\": {\n        \"street\": \"{{shipping_street}}\",\n        \"city\": \"{{shipping_city}}\",\n        \"state\": \"{{shipping_state}}\",\n        \"country\": \"{{shipping_country}}\",\n        \"zipCode\": \"{{shipping_zipcode}}\"\n    },\n    \"billingAddress\": {\n        \"street\": \"{{billing_street}}\",\n        \"city\": \"{{billing_city}}\",\n        \"state\": \"{{billing_state}}\",\n        \"country\": \"{{billing_country}}\",\n        \"zipCode\": \"{{billing_zipcode}}\"\n    },\n    \"orderItems\": [\n        {\n            \"productId\": \"{{product_id}}\",\n            \"productName\": \"{{product_name}}\",\n            \"unitPrice\": {{product_price}},\n            \"currency\": \"{{currency}}\",\n            \"quantity\": {{order_quantity}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/orders",
              "host": ["{{gateway_url}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "Get Orders by User ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/orders/user/{{user_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["orders", "user", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Order by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains order details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('userId');",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 2000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/orders/{{order_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["orders", "{{order_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Stock Service",
      "item": [
        {
          "name": "Get All Stocks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 2000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/stocks",
              "host": ["{{gateway_url}}"],
              "path": ["stocks"]
            }
          },
          "response": []
        },
        {
          "name": "Get Stock by Product ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains stock details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('productId');",
                  "    pm.expect(jsonData).to.have.property('quantity');",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 2000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/stocks/product/{{product_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["stocks", "product", "{{product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Stock Quantity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"productId\": \"{{product_id}}\",\n    \"quantity\": {{new_stock_quantity}}\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/stocks/update-quantity",
              "host": ["{{gateway_url}}"],
              "path": ["stocks", "update-quantity"]
            }
          },
          "response": []
        },
        {
          "name": "Reserve Stock",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"productId\": \"{{product_id}}\",\n    \"quantity\": {{reserve_quantity}}\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/stocks/reserve",
              "host": ["{{gateway_url}}"],
              "path": ["stocks", "reserve"]
            }
          },
          "response": []
        },
        {
          "name": "Release Stock",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 3000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"productId\": \"{{product_id}}\",\n    \"quantity\": {{release_quantity}}\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/stocks/release",
              "host": ["{{gateway_url}}"],
              "path": ["stocks", "release"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Gateway Health",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/health",
              "host": ["{{gateway_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "End-to-End Test Scenario",
      "item": [
        {
          "name": "1. Register New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"User registration successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('auth_token', jsonData.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fullName\": \"John Doe\",\n    \"email\": \"john.doe.test@example.com\",\n    \"password\": \"TestPassword123!\"\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/auth/register",
              "host": ["{{gateway_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "2. Create New Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Product creation successful\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('test_product_id', jsonData.Id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Laptop\",\n    \"price\": 999.99,\n    \"stock\": 50\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/products",
              "host": ["{{gateway_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "3. Check Stock for Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Stock check successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.quantity).to.be.above(0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/stocks/product/{{test_product_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["stocks", "product", "{{test_product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "4. Reserve Stock",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Stock reservation successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"productId\": \"{{test_product_id}}\",\n    \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/stocks/reserve",
              "host": ["{{gateway_url}}"],
              "path": ["stocks", "reserve"]
            }
          },
          "response": []
        },
        {
          "name": "5. Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Order creation successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('test_order_id', jsonData);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"test-user-123\",\n    \"shippingAddress\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"country\": \"USA\",\n        \"zipCode\": \"10001\"\n    },\n    \"billingAddress\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"country\": \"USA\",\n        \"zipCode\": \"10001\"\n    },\n    \"orderItems\": [\n        {\n            \"productId\": \"{{test_product_id}}\",\n            \"productName\": \"Test Laptop\",\n            \"unitPrice\": 999.99,\n            \"currency\": \"USD\",\n            \"quantity\": 2\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{gateway_url}}/orders",
              "host": ["{{gateway_url}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "6. Verify Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Order verification successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.eql(pm.environment.get('test_order_id'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/orders/{{test_order_id}}",
              "host": ["{{gateway_url}}"],
              "path": ["orders", "{{test_order_id}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "gateway_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "user_fullname",
      "value": "Test User",
      "type": "string"
    },
    {
      "key": "user_email",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "user_password",
      "value": "TestPassword123!",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "test-user-123",
      "type": "string"
    },
    {
      "key": "product_name",
      "value": "Sample Product",
      "type": "string"
    },
    {
      "key": "product_price",
      "value": "99.99",
      "type": "string"
    },
    {
      "key": "product_stock",
      "value": "100",
      "type": "string"
    },
    {
      "key": "product_price_updated",
      "value": "119.99",
      "type": "string"
    },
    {
      "key": "product_stock_updated",
      "value": "150",
      "type": "string"
    },
    {
      "key": "shipping_street",
      "value": "123 Main Street",
      "type": "string"
    },
    {
      "key": "shipping_city",
      "value": "New York",
      "type": "string"
    },
    {
      "key": "shipping_state",
      "value": "NY",
      "type": "string"
    },
    {
      "key": "shipping_country",
      "value": "USA",
      "type": "string"
    },
    {
      "key": "shipping_zipcode",
      "value": "10001",
      "type": "string"
    },
    {
      "key": "billing_street",
      "value": "123 Main Street",
      "type": "string"
    },
    {
      "key": "billing_city",
      "value": "New York",
      "type": "string"
    },
    {
      "key": "billing_state",
      "value": "NY",
      "type": "string"
    },
    {
      "key": "billing_country",
      "value": "USA",
      "type": "string"
    },
    {
      "key": "billing_zipcode",
      "value": "10001",
      "type": "string"
    },
    {
      "key": "currency",
      "value": "USD",
      "type": "string"
    },
    {
      "key": "order_quantity",
      "value": "2",
      "type": "string"
    },
    {
      "key": "new_stock_quantity",
      "value": "200",
      "type": "string"
    },
    {
      "key": "reserve_quantity",
      "value": "5",
      "type": "string"
    },
    {
      "key": "release_quantity",
      "value": "3",
      "type": "string"
    }
  ]
}