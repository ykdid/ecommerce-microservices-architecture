services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce-net

  product-db:
    image: postgres:16
    container_name: product-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ProductDb
    ports:
      - "5444:5432"
    volumes:
      - product_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  product-api:
    build:
      context: .
      dockerfile: Services/ProductService/Product.API/Dockerfile
    container_name: product-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSQL=Host=product-db;Port=5432;Database=ProductDb;Username=postgres;Password=postgres
    ports:
      - "7001:8080"
    depends_on:
      - product-db
      - rabbitmq
    networks:
      - ecommerce-net

  auth-db:
    image: postgres:16
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: AuthDb
    ports:
      - "5445:5432"
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  auth-api:
    build:
      context: .
      dockerfile: Services/AuthService/Auth.API/Dockerfile
    container_name: auth-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSQL=Host=auth-db;Port=5432;Database=AuthDb;Username=postgres;Password=postgres
    ports:
      - "7002:8080"
    depends_on:
      - auth-db
      - rabbitmq
    networks:
      - ecommerce-net

  order-db:
    image: postgres:16
    container_name: order-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: OrderServiceDb
    ports:
      - "5446:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  order-api:
    build:
      context: .
      dockerfile: Services/OrderService/Order.API/Dockerfile
    container_name: order-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=order-db;Port=5432;Database=OrderServiceDb;Username=postgres;Password=postgres
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__QueueName=order_queue
      - RabbitMQ__ExchangeName=ecommerce_exchange
      - RabbitMQ__RoutingKey=order.events
    ports:
      - "7003:8080"
    depends_on:
      - order-db
      - rabbitmq
    networks:
      - ecommerce-net

  stock-db:
    image: postgres:16
    container_name: stock-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: StockServiceDb
    ports:
      - "5447:5432"
    volumes:
      - stock_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  stock-api:
    build:
      context: .
      dockerfile: Services/StockService/Stock.API/Dockerfile
    container_name: stock-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=stock-db;Port=5432;Database=StockServiceDb;Username=postgres;Password=postgres
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__QueueName=stock_queue
      - RabbitMQ__ExchangeName=ecommerce_exchange
      - RabbitMQ__RoutingKey=stock.events
    ports:
      - "7004:8080"
    depends_on:
      - stock-db
      - rabbitmq
    networks:
      - ecommerce-net

  gateway:
    build:
      context: ./Gateway/ApiGateway.Ocelot
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8000:8080"
    depends_on:
      - auth-api
      - product-api
      - order-api
      - stock-api
      - rabbitmq
    networks:
      - ecommerce-net

volumes:
  rabbitmq_data:
  product_data:
  auth_data:
  order_data:
  stock_data:

networks:
  ecommerce-net:
    driver: bridge
