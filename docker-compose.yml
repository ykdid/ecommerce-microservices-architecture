services:
  product-db:
    image: postgres:16
    container_name: product-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ProductDb
    ports:
      - "5444:5432"
    volumes:
      - product_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  product-api:
    build:
      context: ./Services/ProductService
      dockerfile: Product.API/Dockerfile
    container_name: product-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSQL=Host=product-db;Port=5432;Database=ProductDb;Username=postgres;Password=postgres
    ports:
      - "7001:8080"
    depends_on:
      - product-db
    networks:
      - ecommerce-net

  auth-db:
    image: postgres:16
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: AuthDb
    ports:
      - "5445:5432"
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  auth-api:
    build:
      context: ./Services/AuthService
      dockerfile: Auth.API/Dockerfile
    container_name: auth-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSQL=Host=auth-db;Port=5432;Database=AuthDb;Username=postgres;Password=postgres
    ports:
      - "7002:8080"
    depends_on:
      - auth-db
    networks:
      - ecommerce-net

volumes:
  product_data:
  auth_data:

networks:
  ecommerce-net:
    driver: bridge
